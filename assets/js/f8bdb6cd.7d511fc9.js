"use strict";(self.webpackChunkilia_kebets_tech_blog=self.webpackChunkilia_kebets_tech_blog||[]).push([[114],{5975:(t,e,a)=>{a.r(e),a.d(e,{assets:()=>l,contentTitle:()=>s,default:()=>m,frontMatter:()=>r,metadata:()=>o,toc:()=>p});var i=a(4848),n=a(8453);const r={slug:"Multipart-Form-data-response-parsing-in-Java-and-JavaScript",title:"Multipart Form-data response parsing in Java and JavaScript",authors:["ilia"],tags:["javascript","java","http","response","multipart-form-data"]},s="Multipart Form-data response parsing in Java and JavaScript",o={permalink:"/blog/Multipart-Form-data-response-parsing-in-Java-and-JavaScript",editUrl:"https://github.com/kebetsi/kebetsi.github.io/tree/main/packages/create-docusaurus/templates/shared/blog/2024-09-16-form-data-response/index.md",source:"@site/blog/2024-09-16-form-data-response/index.md",title:"Multipart Form-data response parsing in Java and JavaScript",description:"In this article, I will show you how to implement an HTTP server that replies with form-data and how to parse it from the client. I will provide examples for the server in Node.js, using external libraries and native ones. For the client, I will show implementations in JS and Java.",date:"2024-09-16T00:00:00.000Z",tags:[{inline:!1,label:"JavaScript",permalink:"/blog/tags/javascript",description:"all things about JS"},{inline:!1,label:"Java",permalink:"/blog/tags/java",description:"all things about Java"},{inline:!0,label:"http",permalink:"/blog/tags/http"},{inline:!0,label:"response",permalink:"/blog/tags/response"},{inline:!0,label:"multipart-form-data",permalink:"/blog/tags/multipart-form-data"}],readingTime:10.19,hasTruncateMarker:!0,authors:[{name:"Ilia Kebets",title:"Software engineer @ Sonar",url:"https://github.com/kebetsi",page:{permalink:"/blog/authors/ilia"},socials:{linkedin:"https://www.linkedin.com/in/iliakebets/",github:"https://github.com/kebetsi"},imageURL:"https://github.com/kebetsi.png",key:"ilia"}],frontMatter:{slug:"Multipart-Form-data-response-parsing-in-Java-and-JavaScript",title:"Multipart Form-data response parsing in Java and JavaScript",authors:["ilia"],tags:["javascript","java","http","response","multipart-form-data"]},unlisted:!1,nextItem:{title:"MacOS software development tools",permalink:"/blog/MacOS-software-development-tools"}},l={authorsImageUrls:[void 0]},p=[];function c(t){const e={p:"p",strong:"strong",...(0,n.R)(),...t.components};return(0,i.jsxs)(e.p,{children:["In this article, I will show you how to implement an HTTP server that ",(0,i.jsx)(e.strong,{children:"replies with form-data"})," and how to parse it from the client. I will provide examples for the server in Node.js, using external libraries and native ones. For the client, I will show implementations in JS and Java."]})}function m(t={}){const{wrapper:e}={...(0,n.R)(),...t.components};return e?(0,i.jsx)(e,{...t,children:(0,i.jsx)(c,{...t})}):c(t)}},8453:(t,e,a)=>{a.d(e,{R:()=>s,x:()=>o});var i=a(6540);const n={},r=i.createContext(n);function s(t){const e=i.useContext(r);return i.useMemo((function(){return"function"==typeof t?t(e):{...e,...t}}),[e,t])}function o(t){let e;return e=t.disableParentContext?"function"==typeof t.components?t.components(n):t.components||n:s(t.components),i.createElement(r.Provider,{value:e},t.children)}}}]);